/*
================= IMPORTANT - READ CAREFULLY BEFORE USING =====================
THE SOFTWARE PRODUCT. The SOFTWARE PRODUCT is owned by CHORA INFORMATIQUE and
is copyrighted and licensed, not sold. The SOFTWARE PRODUCT is protected by
copyright law and international copyright treaties, as well as other
intellectual property laws and treaties. By installing, copying or otherwise
using this SOFTWARE PRODUCT, you agree to be bound by the terms of CHORA
INFORMATIQUE's General Terms and Conditions in relation to the type of license
you have acquired. (See your Contract Administrator for complete details of
your license agreement with CHORA INFORMATIQUE).
If you do not agree to the terms of CHORA INFORMATIQUE's License Agreement,
do not install or use the SOFTWARE PRODUCT. The term "SOFTWARE PRODUCT" means
the original program and all whole or partial copies of it. A Program consists
of machine-readable instructions, its associated media, printed materials, and
"online" or electronic documentation and related licensed materials
("SOFTWARE PRODUCT").
COPYRIGHT. All title and copyrights in and to this SOFTWARE PRODUCT (including
but not limited to any images, photographs, video, audio, text and "applets"
incorporated into the SOFTWARE PRODUCT), the accompanying printed materials,
and any copies of the SOFTWARE PRODUCT are owned by CHORA INFORMATIQUE or its
suppliers. The SOFTWARE PRODUCT is protected by copyright law and international
treaty provisions. Therefore, you must treat the SOFTWARE PRODUCT like any
other copyrighted material except that you may install the SOFTWARE PRODUCT
on a single computer provided you keep the original solely for backup or
archival purposes. Should you have any questions, please contact your local
CHORA INFORMATIQUE Office or Distributor.
 */

/*
 * BriquesTechniquesPanel.java
 *
 * Created on 23 mars 2011, 14:47:27
 */
package com.choranet.badr.views.panel;

import com.choranet.badr.core.Controlleur;
import com.choranet.badr.core.model.CoucheVueEnum;
import com.choranet.badr.core.model.commande.BriquesTechniquesCommandes;
import java.awt.Component;
import java.awt.Dimension;

/**
 *
 * @author rabbah
 */
public class BriquesTechniquesPanel extends javax.swing.JPanel {

    private Controlleur controlleur;
    private Component parent;

    /** Creates new form BriquesTechniquesPanel */
    public BriquesTechniquesPanel(Controlleur controlleur, Component parent) {
        this.controlleur = controlleur;
        this.parent = parent;
        initComponents();
        //setPreferredSize(new Dimension(820, 520));
        //validate();
        this.controlleur.getViewToCoreDTO().setCoucheVue(CoucheVueEnum.GSP);        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupViewsChoice = new javax.swing.ButtonGroup();
        buttonGroupSecurityTechnologie = new javax.swing.ButtonGroup();
        buttonGroupWsChoice = new javax.swing.ButtonGroup();
        buttonGroupDiagrammeChooser = new javax.swing.ButtonGroup();
        buttonGroupJasperChooser = new javax.swing.ButtonGroup();
        buttonGroupWorkflowChooser = new javax.swing.ButtonGroup();
        buttonGroupFunctionalTestChooser = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelView = new javax.swing.JPanel();
        jRadioButtonGSP = new javax.swing.JRadioButton();
        jRadioButtonZK = new javax.swing.JRadioButton();
        jRadioButtonFLEX = new javax.swing.JRadioButton();
        jRadioButtonOpenLaszlo = new javax.swing.JRadioButton();
        jPanelSecurity = new javax.swing.JPanel();
        jRadioButtonAcegi = new javax.swing.JRadioButton();
        jRadioButtonJsecurity = new javax.swing.JRadioButton();
        jRadioButtonSpringSecurityCore = new javax.swing.JRadioButton();
        jCheckBoxEncryption = new javax.swing.JCheckBox();
        jCheckBoxLdap = new javax.swing.JCheckBox();
        jPanelReporting = new javax.swing.JPanel();
        jCheckBoxExport = new javax.swing.JCheckBox();
        jRadioButtonJasper = new javax.swing.JRadioButton();
        jRadioButtonDynamicJasperReport = new javax.swing.JRadioButton();
        jPanelCharting = new javax.swing.JPanel();
        jRadioButtonGoogleChart = new javax.swing.JRadioButton();
        jRadioButtonOpenFlashChart = new javax.swing.JRadioButton();
        jRadioButtonJfreeChart = new javax.swing.JRadioButton();
        jPanelRecherche = new javax.swing.JPanel();
        jCheckBoxSearchable = new javax.swing.JCheckBox();
        jCheckBoxWebSearch = new javax.swing.JCheckBox();
        jPanelWorkflow = new javax.swing.JPanel();
        jRadioButtonActivitiBpm = new javax.swing.JRadioButton();
        jRadioButtonAjaxflox = new javax.swing.JRadioButton();
        jRadioButtonGrailsFlow = new javax.swing.JRadioButton();
        jRadioButtonOsWorkflow = new javax.swing.JRadioButton();
        jPanelRichClient = new javax.swing.JPanel();
        jCheckBoxYahooui = new javax.swing.JCheckBox();
        jCheckBoxApplet = new javax.swing.JCheckBox();
        jCheckBoxRichUi = new javax.swing.JCheckBox();
        jCheckBoxFileUploader = new javax.swing.JCheckBox();
        jCheckBoxCaptcha = new javax.swing.JCheckBox();
        jCheckBoxFormHelper = new javax.swing.JCheckBox();
        jCheckBoxFCKeditor = new javax.swing.JCheckBox();
        jCheckBoxWebcamSnaps = new javax.swing.JCheckBox();
        jCheckBoxImagezoom = new javax.swing.JCheckBox();
        jPanelWs = new javax.swing.JPanel();
        jCheckBoxWsClient = new javax.swing.JCheckBox();
        jCheckBoxRestClient = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jRadioButtonCxf = new javax.swing.JRadioButton();
        jRadioButtonSpringWs = new javax.swing.JRadioButton();
        jRadioButtonApacheAxis2 = new javax.swing.JRadioButton();
        jPanelUml = new javax.swing.JPanel();
        jCheckBoxClassDiagram = new javax.swing.JCheckBox();
        jCheckBoxCreateDomainUml = new javax.swing.JCheckBox();
        jPanelAudit = new javax.swing.JPanel();
        jCheckBoxAuditTrail = new javax.swing.JCheckBox();
        jCheckBoxAudit = new javax.swing.JCheckBox();
        jPanelArchitectureDistribue = new javax.swing.JPanel();
        jCheckBoxJms = new javax.swing.JCheckBox();
        jCheckBoxActiveMQ = new javax.swing.JCheckBox();
        jCheckBoxJmx = new javax.swing.JCheckBox();
        jPanelTestingUtilites = new javax.swing.JPanel();
        jRadioButtonWebtest = new javax.swing.JRadioButton();
        jRadioButtonFunctionalTesting = new javax.swing.JRadioButton();
        jCheckBoxSelenium = new javax.swing.JCheckBox();
        jCheckBoxFitnesse = new javax.swing.JCheckBox();
        jCheckBoxDbUnit = new javax.swing.JCheckBox();
        jPanelUtilitairesBdD = new javax.swing.JPanel();
        jCheckBoxDynamicDomainClass = new javax.swing.JCheckBox();
        jCheckBoxDbUtil = new javax.swing.JCheckBox();
        jPanelUtilitaires = new javax.swing.JPanel();
        jCheckBoxLicence = new javax.swing.JCheckBox();
        jCheckBoxQuartz = new javax.swing.JCheckBox();
        jCheckBoxReverseEngineering = new javax.swing.JCheckBox();
        jCheckBoxApplicationInfo = new javax.swing.JCheckBox();
        jCheckBoxClamAv = new javax.swing.JCheckBox();
        jCheckBoxOsgi = new javax.swing.JCheckBox();
        jCheckBoxMail = new javax.swing.JCheckBox();
        jCheckBoxCsvParser = new javax.swing.JCheckBox();
        jCheckBoxExcelImport = new javax.swing.JCheckBox();
        jCheckBoxI18nTemplates = new javax.swing.JCheckBox();

        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(600, 500));

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setName("jTabbedPanelBT"); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(600, 300));

        jPanelView.setName("jPanelView"); // NOI18N

        buttonGroupViewsChoice.add(jRadioButtonGSP);
        jRadioButtonGSP.setSelected(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.choranet.badr.views.Run.class).getContext().getResourceMap(BriquesTechniquesPanel.class);
        jRadioButtonGSP.setText(resourceMap.getString("jRadioButtonGSP.text")); // NOI18N
        jRadioButtonGSP.setName("jRadioButtonGSP"); // NOI18N
        jRadioButtonGSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonGSPActionPerformed(evt);
            }
        });
        jPanelView.add(jRadioButtonGSP);

        //jRadioButtonZK.setModel(null);
        buttonGroupViewsChoice.add(jRadioButtonZK);
        jRadioButtonZK.setText(resourceMap.getString("jRadioButtonZK.text")); // NOI18N
        jRadioButtonZK.setName("jRadioButtonZK"); // NOI18N
        jRadioButtonZK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonZKActionPerformed(evt);
            }
        });
        jPanelView.add(jRadioButtonZK);

        //jRadioButtonFLEX.setModel(null);
        buttonGroupViewsChoice.add(jRadioButtonFLEX);
        jRadioButtonFLEX.setText(resourceMap.getString("jRadioButtonFLEX.text")); // NOI18N
        jRadioButtonFLEX.setName("jRadioButtonFLEX"); // NOI18N
        jRadioButtonFLEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFLEXActionPerformed(evt);
            }
        });
        jPanelView.add(jRadioButtonFLEX);

        //jRadioButtonOpenLaszlo.setModel(null);
        buttonGroupViewsChoice.add(jRadioButtonOpenLaszlo);
        jRadioButtonOpenLaszlo.setText(resourceMap.getString("jRadioButtonOpenLaszlo.text")); // NOI18N
        jRadioButtonOpenLaszlo.setName("jRadioButtonOpenLaszlo"); // NOI18N
        jRadioButtonOpenLaszlo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOpenLaszloActionPerformed(evt);
            }
        });
        jPanelView.add(jRadioButtonOpenLaszlo);

        jTabbedPane1.addTab(resourceMap.getString("jPanelView.TabConstraints.tabTitle"), jPanelView); // NOI18N

        jPanelSecurity.setName("jPanelSecurity"); // NOI18N

        buttonGroupSecurityTechnologie.add(jRadioButtonAcegi);
        jRadioButtonAcegi.setText(resourceMap.getString("jRadioButtonAcegi.text")); // NOI18N
        jRadioButtonAcegi.setName("jRadioButtonAcegi"); // NOI18N
        jRadioButtonAcegi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAcegiActionPerformed(evt);
            }
        });
        jPanelSecurity.add(jRadioButtonAcegi);

        buttonGroupSecurityTechnologie.add(jRadioButtonJsecurity);
        jRadioButtonJsecurity.setText(resourceMap.getString("jRadioButtonJsecurity.text")); // NOI18N
        jRadioButtonJsecurity.setName("jRadioButtonJsecurity"); // NOI18N
        jRadioButtonJsecurity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonJsecurityActionPerformed(evt);
            }
        });
        jPanelSecurity.add(jRadioButtonJsecurity);

        buttonGroupSecurityTechnologie.add(jRadioButtonSpringSecurityCore);
        jRadioButtonSpringSecurityCore.setText(resourceMap.getString("jRadioButtonSpringSecurityCore.text")); // NOI18N
        jRadioButtonSpringSecurityCore.setName("jRadioButtonSpringSecurityCore"); // NOI18N
        jRadioButtonSpringSecurityCore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSpringSecurityCoreActionPerformed(evt);
            }
        });
        jPanelSecurity.add(jRadioButtonSpringSecurityCore);

        jCheckBoxEncryption.setText(resourceMap.getString("jCheckBoxEncryption.text")); // NOI18N
        jCheckBoxEncryption.setName("jCheckBoxEncryption"); // NOI18N
        jCheckBoxEncryption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxEncryptionActionPerformed(evt);
            }
        });
        jPanelSecurity.add(jCheckBoxEncryption);

        jCheckBoxLdap.setText(resourceMap.getString("jCheckBoxLdap.text")); // NOI18N
        jCheckBoxLdap.setName("jCheckBoxLdap"); // NOI18N
        jCheckBoxLdap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxLdapActionPerformed(evt);
            }
        });
        jPanelSecurity.add(jCheckBoxLdap);

        jTabbedPane1.addTab(resourceMap.getString("jPanelSecurity.TabConstraints.tabTitle"), jPanelSecurity); // NOI18N

        jPanelReporting.setName("jPanelReporting"); // NOI18N

        jCheckBoxExport.setText(resourceMap.getString("jCheckBoxExport.text")); // NOI18N
        jCheckBoxExport.setName("jCheckBoxExport"); // NOI18N
        jCheckBoxExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxExportActionPerformed(evt);
            }
        });
        jPanelReporting.add(jCheckBoxExport);

        buttonGroupJasperChooser.add(jRadioButtonJasper);
        jRadioButtonJasper.setText(resourceMap.getString("jRadioButtonJasper.text")); // NOI18N
        jRadioButtonJasper.setName("jRadioButtonJasper"); // NOI18N
        jRadioButtonJasper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonJasperActionPerformed(evt);
            }
        });
        jPanelReporting.add(jRadioButtonJasper);

        buttonGroupJasperChooser.add(jRadioButtonDynamicJasperReport);
        jRadioButtonDynamicJasperReport.setText(resourceMap.getString("jRadioButtonDynamicJasperReport.text")); // NOI18N
        jRadioButtonDynamicJasperReport.setName("jRadioButtonDynamicJasperReport"); // NOI18N
        jRadioButtonDynamicJasperReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDynamicJasperReportActionPerformed(evt);
            }
        });
        jPanelReporting.add(jRadioButtonDynamicJasperReport);

        jTabbedPane1.addTab(resourceMap.getString("jPanelReporting.TabConstraints.tabTitle"), jPanelReporting); // NOI18N

        jPanelCharting.setName("jPanelCharting"); // NOI18N

        buttonGroupDiagrammeChooser.add(jRadioButtonGoogleChart);
        jRadioButtonGoogleChart.setText(resourceMap.getString("jRadioButtonGoogleChart.text")); // NOI18N
        jRadioButtonGoogleChart.setName("jRadioButtonGoogleChart"); // NOI18N
        jRadioButtonGoogleChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonGoogleChartActionPerformed(evt);
            }
        });
        jPanelCharting.add(jRadioButtonGoogleChart);

        buttonGroupDiagrammeChooser.add(jRadioButtonOpenFlashChart);
        jRadioButtonOpenFlashChart.setText(resourceMap.getString("jRadioButtonOpenFlashChart.text")); // NOI18N
        jRadioButtonOpenFlashChart.setName("jRadioButtonOpenFlashChart"); // NOI18N
        jRadioButtonOpenFlashChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOpenFlashChartActionPerformed(evt);
            }
        });
        jPanelCharting.add(jRadioButtonOpenFlashChart);

        buttonGroupDiagrammeChooser.add(jRadioButtonJfreeChart);
        jRadioButtonJfreeChart.setText(resourceMap.getString("jRadioButtonJfreeChart.text")); // NOI18N
        jRadioButtonJfreeChart.setName("jRadioButtonJfreeChart"); // NOI18N
        jRadioButtonJfreeChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonJfreeChartActionPerformed(evt);
            }
        });
        jPanelCharting.add(jRadioButtonJfreeChart);

        jTabbedPane1.addTab(resourceMap.getString("jPanelCharting.TabConstraints.tabTitle"), jPanelCharting); // NOI18N

        jPanelRecherche.setName("jPanelRecherche"); // NOI18N

        jCheckBoxSearchable.setText(resourceMap.getString("jCheckBoxSearchable.text")); // NOI18N
        jCheckBoxSearchable.setName("jCheckBoxSearchable"); // NOI18N
        jCheckBoxSearchable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSearchableActionPerformed(evt);
            }
        });
        jPanelRecherche.add(jCheckBoxSearchable);

        jCheckBoxWebSearch.setText(resourceMap.getString("jCheckBoxWebSearch.text")); // NOI18N
        jCheckBoxWebSearch.setName("jCheckBoxWebSearch"); // NOI18N
        jCheckBoxWebSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxWebSearchActionPerformed(evt);
            }
        });
        jPanelRecherche.add(jCheckBoxWebSearch);

        jTabbedPane1.addTab(resourceMap.getString("jPanelRecherche.TabConstraints.tabTitle"), jPanelRecherche); // NOI18N

        jPanelWorkflow.setName("jPanelWorkflow"); // NOI18N

        buttonGroupWorkflowChooser.add(jRadioButtonActivitiBpm);
        jRadioButtonActivitiBpm.setText(resourceMap.getString("jRadioButtonActivitiBpm.text")); // NOI18N
        jRadioButtonActivitiBpm.setName("jRadioButtonActivitiBpm"); // NOI18N
        jRadioButtonActivitiBpm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonActivitiBpmActionPerformed(evt);
            }
        });
        jPanelWorkflow.add(jRadioButtonActivitiBpm);

        buttonGroupWorkflowChooser.add(jRadioButtonAjaxflox);
        jRadioButtonAjaxflox.setText(resourceMap.getString("jRadioButtonAjaxflox.text")); // NOI18N
        jRadioButtonAjaxflox.setName("jRadioButtonAjaxflox"); // NOI18N
        jRadioButtonAjaxflox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAjaxfloxActionPerformed(evt);
            }
        });
        jPanelWorkflow.add(jRadioButtonAjaxflox);

        buttonGroupWorkflowChooser.add(jRadioButtonGrailsFlow);
        jRadioButtonGrailsFlow.setText(resourceMap.getString("jRadioButtonGrailsFlow.text")); // NOI18N
        jRadioButtonGrailsFlow.setName("jRadioButtonGrailsFlow"); // NOI18N
        jRadioButtonGrailsFlow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonGrailsFlowActionPerformed(evt);
            }
        });
        jPanelWorkflow.add(jRadioButtonGrailsFlow);

        buttonGroupWorkflowChooser.add(jRadioButtonOsWorkflow);
        jRadioButtonOsWorkflow.setText(resourceMap.getString("jRadioButtonOsWorkflow.text")); // NOI18N
        jRadioButtonOsWorkflow.setName("jRadioButtonOsWorkflow"); // NOI18N
        jRadioButtonOsWorkflow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOsWorkflowActionPerformed(evt);
            }
        });
        jPanelWorkflow.add(jRadioButtonOsWorkflow);

        jTabbedPane1.addTab(resourceMap.getString("jPanelWorkflow.TabConstraints.tabTitle"), jPanelWorkflow); // NOI18N

        jPanelRichClient.setName("jPanelRichClient"); // NOI18N

        jCheckBoxYahooui.setText(resourceMap.getString("jCheckBoxYahooui.text")); // NOI18N
        jCheckBoxYahooui.setName("jCheckBoxYahooui"); // NOI18N
        jCheckBoxYahooui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxYahoouiActionPerformed(evt);
            }
        });
        jPanelRichClient.add(jCheckBoxYahooui);

        jCheckBoxApplet.setText(resourceMap.getString("jCheckBoxApplet.text")); // NOI18N
        jCheckBoxApplet.setName("jCheckBoxApplet"); // NOI18N
        jCheckBoxApplet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAppletActionPerformed(evt);
            }
        });
        jPanelRichClient.add(jCheckBoxApplet);

        jCheckBoxRichUi.setText(resourceMap.getString("jCheckBoxRichUi.text")); // NOI18N
        jCheckBoxRichUi.setName("jCheckBoxRichUi"); // NOI18N
        jCheckBoxRichUi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRichUiActionPerformed(evt);
            }
        });
        jPanelRichClient.add(jCheckBoxRichUi);

        jCheckBoxFileUploader.setText(resourceMap.getString("jCheckBoxFileUploader.text")); // NOI18N
        jCheckBoxFileUploader.setName("jCheckBoxFileUploader"); // NOI18N
        jCheckBoxFileUploader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFileUploaderActionPerformed(evt);
            }
        });
        jPanelRichClient.add(jCheckBoxFileUploader);

        jCheckBoxCaptcha.setText(resourceMap.getString("jCheckBoxCaptcha.text")); // NOI18N
        jCheckBoxCaptcha.setName("jCheckBoxCaptcha"); // NOI18N
        jCheckBoxCaptcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCaptchaActionPerformed(evt);
            }
        });
        jPanelRichClient.add(jCheckBoxCaptcha);

        jCheckBoxFormHelper.setText(resourceMap.getString("jCheckBoxFormHelper.text")); // NOI18N
        jCheckBoxFormHelper.setName("jCheckBoxFormHelper"); // NOI18N
        jCheckBoxFormHelper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFormHelperActionPerformed(evt);
            }
        });
        jPanelRichClient.add(jCheckBoxFormHelper);

        jCheckBoxFCKeditor.setText(resourceMap.getString("jCheckBoxFCKeditor.text")); // NOI18N
        jCheckBoxFCKeditor.setName("jCheckBoxFCKeditor"); // NOI18N
        jCheckBoxFCKeditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFCKeditorActionPerformed(evt);
            }
        });
        jPanelRichClient.add(jCheckBoxFCKeditor);

        jCheckBoxWebcamSnaps.setText(resourceMap.getString("jCheckBoxWebcamSnaps.text")); // NOI18N
        jCheckBoxWebcamSnaps.setName("jCheckBoxWebcamSnaps"); // NOI18N
        jCheckBoxWebcamSnaps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxWebcamSnapsActionPerformed(evt);
            }
        });
        jPanelRichClient.add(jCheckBoxWebcamSnaps);

        jCheckBoxImagezoom.setText(resourceMap.getString("jCheckBoxImagezoom.text")); // NOI18N
        jCheckBoxImagezoom.setName("jCheckBoxImagezoom"); // NOI18N
        jCheckBoxImagezoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxImagezoomActionPerformed(evt);
            }
        });
        jPanelRichClient.add(jCheckBoxImagezoom);

        jTabbedPane1.addTab(resourceMap.getString("jPanelRichClient.TabConstraints.tabTitle"), jPanelRichClient); // NOI18N

        jPanelWs.setName("jPanelWs"); // NOI18N

        jCheckBoxWsClient.setText(resourceMap.getString("jCheckBoxWsClient.text")); // NOI18N
        jCheckBoxWsClient.setName("jCheckBoxWsClient"); // NOI18N
        jCheckBoxWsClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxWsClientActionPerformed(evt);
            }
        });
        jPanelWs.add(jCheckBoxWsClient);

        jCheckBoxRestClient.setText(resourceMap.getString("jCheckBoxRestClient.text")); // NOI18N
        jCheckBoxRestClient.setName("jCheckBoxRestClient"); // NOI18N
        jCheckBoxRestClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRestClientActionPerformed(evt);
            }
        });
        jPanelWs.add(jCheckBoxRestClient);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jPanelWs.add(jSeparator1);

        buttonGroupWsChoice.add(jRadioButtonCxf);
        jRadioButtonCxf.setText(resourceMap.getString("jRadioButtonCxf.text")); // NOI18N
        jRadioButtonCxf.setName("jRadioButtonCxf"); // NOI18N
        jRadioButtonCxf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCxfActionPerformed(evt);
            }
        });
        jPanelWs.add(jRadioButtonCxf);

        buttonGroupWsChoice.add(jRadioButtonSpringWs);
        jRadioButtonSpringWs.setText(resourceMap.getString("jRadioButtonSpringWs.text")); // NOI18N
        jRadioButtonSpringWs.setName("jRadioButtonSpringWs"); // NOI18N
        jRadioButtonSpringWs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSpringWsActionPerformed(evt);
            }
        });
        jPanelWs.add(jRadioButtonSpringWs);

        buttonGroupWsChoice.add(jRadioButtonApacheAxis2);
        jRadioButtonApacheAxis2.setText(resourceMap.getString("jRadioButtonApacheAxis2.text")); // NOI18N
        jRadioButtonApacheAxis2.setName("jRadioButtonApacheAxis2"); // NOI18N
        jRadioButtonApacheAxis2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonApacheAxis2ActionPerformed(evt);
            }
        });
        jPanelWs.add(jRadioButtonApacheAxis2);

        jTabbedPane1.addTab(resourceMap.getString("jPanelWs.TabConstraints.tabTitle"), jPanelWs); // NOI18N

        jPanelUml.setName("jPanelUml"); // NOI18N

        jCheckBoxClassDiagram.setText(resourceMap.getString("jCheckBoxClassDiagram.text")); // NOI18N
        jCheckBoxClassDiagram.setName("jCheckBoxClassDiagram"); // NOI18N
        jCheckBoxClassDiagram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxClassDiagramActionPerformed(evt);
            }
        });
        jPanelUml.add(jCheckBoxClassDiagram);

        jCheckBoxCreateDomainUml.setText(resourceMap.getString("jCheckBoxCreateDomainUml.text")); // NOI18N
        jCheckBoxCreateDomainUml.setName("jCheckBoxCreateDomainUml"); // NOI18N
        jCheckBoxCreateDomainUml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCreateDomainUmlActionPerformed(evt);
            }
        });
        jPanelUml.add(jCheckBoxCreateDomainUml);

        jTabbedPane1.addTab(resourceMap.getString("jPanelUml.TabConstraints.tabTitle"), jPanelUml); // NOI18N

        jPanelAudit.setName("jPanelAudit"); // NOI18N

        jCheckBoxAuditTrail.setText(resourceMap.getString("jCheckBoxAuditTrail.text")); // NOI18N
        jCheckBoxAuditTrail.setName("jCheckBoxAuditTrail"); // NOI18N
        jCheckBoxAuditTrail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAuditTrailActionPerformed(evt);
            }
        });
        jPanelAudit.add(jCheckBoxAuditTrail);

        jCheckBoxAudit.setText(resourceMap.getString("jCheckBoxAudit.text")); // NOI18N
        jCheckBoxAudit.setName("jCheckBoxAudit"); // NOI18N
        jCheckBoxAudit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAuditActionPerformed(evt);
            }
        });
        jPanelAudit.add(jCheckBoxAudit);

        jTabbedPane1.addTab(resourceMap.getString("jPanelAudit.TabConstraints.tabTitle"), jPanelAudit); // NOI18N

        jPanelArchitectureDistribue.setName("jPanelArchitectureDistribue"); // NOI18N

        jCheckBoxJms.setText(resourceMap.getString("jCheckBoxJms.text")); // NOI18N
        jCheckBoxJms.setName("jCheckBoxJms"); // NOI18N
        jCheckBoxJms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxJmsActionPerformed(evt);
            }
        });
        jPanelArchitectureDistribue.add(jCheckBoxJms);

        jCheckBoxActiveMQ.setText(resourceMap.getString("jCheckBoxActiveMQ.text")); // NOI18N
        jCheckBoxActiveMQ.setName("jCheckBoxActiveMQ"); // NOI18N
        jCheckBoxActiveMQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxActiveMQActionPerformed(evt);
            }
        });
        jPanelArchitectureDistribue.add(jCheckBoxActiveMQ);

        jCheckBoxJmx.setText(resourceMap.getString("jCheckBoxJmx.text")); // NOI18N
        jCheckBoxJmx.setName("jCheckBoxJmx"); // NOI18N
        jCheckBoxJmx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxJmxActionPerformed(evt);
            }
        });
        jPanelArchitectureDistribue.add(jCheckBoxJmx);

        jTabbedPane1.addTab(resourceMap.getString("jPanelArchitectureDistribue.TabConstraints.tabTitle"), jPanelArchitectureDistribue); // NOI18N

        jPanelTestingUtilites.setName("jPanelTestingUtilites"); // NOI18N

        buttonGroupFunctionalTestChooser.add(jRadioButtonWebtest);
        jRadioButtonWebtest.setText(resourceMap.getString("jRadioButtonWebtest.text")); // NOI18N
        jRadioButtonWebtest.setName("jRadioButtonWebtest"); // NOI18N
        jRadioButtonWebtest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonWebtestActionPerformed(evt);
            }
        });
        jPanelTestingUtilites.add(jRadioButtonWebtest);

        buttonGroupFunctionalTestChooser.add(jRadioButtonFunctionalTesting);
        jRadioButtonFunctionalTesting.setText(resourceMap.getString("jRadioButtonFunctionalTesting.text")); // NOI18N
        jRadioButtonFunctionalTesting.setName("jRadioButtonFunctionalTesting"); // NOI18N
        jRadioButtonFunctionalTesting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFunctionalTestingActionPerformed(evt);
            }
        });
        jPanelTestingUtilites.add(jRadioButtonFunctionalTesting);

        jCheckBoxSelenium.setText(resourceMap.getString("jCheckBoxSelenium.text")); // NOI18N
        jCheckBoxSelenium.setName("jCheckBoxSelenium"); // NOI18N
        jCheckBoxSelenium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSeleniumActionPerformed(evt);
            }
        });
        jPanelTestingUtilites.add(jCheckBoxSelenium);

        jCheckBoxFitnesse.setText(resourceMap.getString("jCheckBoxFitnesse.text")); // NOI18N
        jCheckBoxFitnesse.setName("jCheckBoxFitnesse"); // NOI18N
        jCheckBoxFitnesse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFitnesseActionPerformed(evt);
            }
        });
        jPanelTestingUtilites.add(jCheckBoxFitnesse);

        jCheckBoxDbUnit.setText(resourceMap.getString("jCheckBoxDbUnit.text")); // NOI18N
        jCheckBoxDbUnit.setName("jCheckBoxDbUnit"); // NOI18N
        jCheckBoxDbUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDbUnitActionPerformed(evt);
            }
        });
        jPanelTestingUtilites.add(jCheckBoxDbUnit);

        jTabbedPane1.addTab(resourceMap.getString("jPanelTestingUtilites.TabConstraints.tabTitle"), jPanelTestingUtilites); // NOI18N

        jPanelUtilitairesBdD.setName("jPanelUtilitairesBdD"); // NOI18N

        jCheckBoxDynamicDomainClass.setText(resourceMap.getString("jCheckBoxDynamicDomainClass.text")); // NOI18N
        jCheckBoxDynamicDomainClass.setName("jCheckBoxDynamicDomainClass"); // NOI18N
        jCheckBoxDynamicDomainClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDynamicDomainClassActionPerformed(evt);
            }
        });
        jPanelUtilitairesBdD.add(jCheckBoxDynamicDomainClass);

        jCheckBoxDbUtil.setText(resourceMap.getString("jCheckBoxDbUtil.text")); // NOI18N
        jCheckBoxDbUtil.setName("jCheckBoxDbUtil"); // NOI18N
        jCheckBoxDbUtil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDbUtilActionPerformed(evt);
            }
        });
        jPanelUtilitairesBdD.add(jCheckBoxDbUtil);

        jTabbedPane1.addTab(resourceMap.getString("jPanelUtilitairesBdD.TabConstraints.tabTitle"), jPanelUtilitairesBdD); // NOI18N

        jPanelUtilitaires.setName("jPanelUtilitaires"); // NOI18N

        jCheckBoxLicence.setText(resourceMap.getString("jCheckBoxLicence.text")); // NOI18N
        jCheckBoxLicence.setName("jCheckBoxLicence"); // NOI18N
        jCheckBoxLicence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxLicenceActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxLicence);

        jCheckBoxQuartz.setText(resourceMap.getString("jCheckBoxQuartz.text")); // NOI18N
        jCheckBoxQuartz.setName("jCheckBoxQuartz"); // NOI18N
        jCheckBoxQuartz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxQuartzActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxQuartz);

        jCheckBoxReverseEngineering.setText(resourceMap.getString("jCheckBoxReverseEngineering.text")); // NOI18N
        jCheckBoxReverseEngineering.setName("jCheckBoxReverseEngineering"); // NOI18N
        jCheckBoxReverseEngineering.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxReverseEngineeringActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxReverseEngineering);

        jCheckBoxApplicationInfo.setText(resourceMap.getString("jCheckBoxApplicationInfo.text")); // NOI18N
        jCheckBoxApplicationInfo.setName("jCheckBoxApplicationInfo"); // NOI18N
        jCheckBoxApplicationInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxApplicationInfoActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxApplicationInfo);

        jCheckBoxClamAv.setText(resourceMap.getString("jCheckBoxClamAv.text")); // NOI18N
        jCheckBoxClamAv.setName("jCheckBoxClamAv"); // NOI18N
        jCheckBoxClamAv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxClamAvActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxClamAv);

        jCheckBoxOsgi.setText(resourceMap.getString("jCheckBoxOsgi.text")); // NOI18N
        jCheckBoxOsgi.setName("jCheckBoxOsgi"); // NOI18N
        jCheckBoxOsgi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxOsgiActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxOsgi);

        jCheckBoxMail.setText(resourceMap.getString("jCheckBoxMail.text")); // NOI18N
        jCheckBoxMail.setName("jCheckBoxMail"); // NOI18N
        jCheckBoxMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMailActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxMail);

        jCheckBoxCsvParser.setText(resourceMap.getString("jCheckBoxCsvParser.text")); // NOI18N
        jCheckBoxCsvParser.setName("jCheckBoxCsvParser"); // NOI18N
        jCheckBoxCsvParser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCsvParserActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxCsvParser);

        jCheckBoxExcelImport.setText(resourceMap.getString("jCheckBoxExcelImport.text")); // NOI18N
        jCheckBoxExcelImport.setName("jCheckBoxExcelImport"); // NOI18N
        jCheckBoxExcelImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxExcelImportActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxExcelImport);

        jCheckBoxI18nTemplates.setText(resourceMap.getString("jCheckBoxI18nTemplates.text")); // NOI18N
        jCheckBoxI18nTemplates.setName("jCheckBoxI18nTemplates"); // NOI18N
        jCheckBoxI18nTemplates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxI18nTemplatesActionPerformed(evt);
            }
        });
        jPanelUtilitaires.add(jCheckBoxI18nTemplates);

        jTabbedPane1.addTab(resourceMap.getString("jPanelUtilitaires.TabConstraints.tabTitle"), jPanelUtilitaires); // NOI18N

        add(jTabbedPane1);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonGSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonGSPActionPerformed
        jTabbedPane1.setEnabledAt(3, true);
        jTabbedPane1.setEnabledAt(6, true);
        controlleur.getViewToCoreDTO().setCoucheVue(CoucheVueEnum.GSP);
}//GEN-LAST:event_jRadioButtonGSPActionPerformed

    private void jRadioButtonZKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonZKActionPerformed
        cancelSpecificGspTunning();
        controlleur.getViewToCoreDTO().setCoucheVue(CoucheVueEnum.ZK);
}//GEN-LAST:event_jRadioButtonZKActionPerformed

    private void jRadioButtonFLEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFLEXActionPerformed
        cancelSpecificGspTunning();
        controlleur.getViewToCoreDTO().setCoucheVue(CoucheVueEnum.FLEX);
}//GEN-LAST:event_jRadioButtonFLEXActionPerformed

    private void jRadioButtonOpenLaszloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOpenLaszloActionPerformed
        cancelSpecificGspTunning();
        controlleur.getViewToCoreDTO().setCoucheVue(CoucheVueEnum.OPENLASZLO);
}//GEN-LAST:event_jRadioButtonOpenLaszloActionPerformed

    private void jRadioButtonAcegiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAcegiActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.ACEGI);
        enleverBriqueTechnique(BriquesTechniquesCommandes.JSECURITY);
        enleverBriqueTechnique(BriquesTechniquesCommandes.SPRINGSECURITYCORE);
}//GEN-LAST:event_jRadioButtonAcegiActionPerformed

    private void jRadioButtonJsecurityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonJsecurityActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.JSECURITY);
        enleverBriqueTechnique(BriquesTechniquesCommandes.ACEGI);
        enleverBriqueTechnique(BriquesTechniquesCommandes.SPRINGSECURITYCORE);
}//GEN-LAST:event_jRadioButtonJsecurityActionPerformed

    private void jRadioButtonSpringSecurityCoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSpringSecurityCoreActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.SPRINGSECURITYCORE);
        enleverBriqueTechnique(BriquesTechniquesCommandes.ACEGI);
        enleverBriqueTechnique(BriquesTechniquesCommandes.JSECURITY);
}//GEN-LAST:event_jRadioButtonSpringSecurityCoreActionPerformed

    private void jCheckBoxEncryptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxEncryptionActionPerformed
        if (jCheckBoxEncryption.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.ENCRYPTION);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.ENCRYPTION);
        }
}//GEN-LAST:event_jCheckBoxEncryptionActionPerformed

    private void jCheckBoxLdapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLdapActionPerformed
        if (jCheckBoxLdap.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.LDAP);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.LDAP);
        }
}//GEN-LAST:event_jCheckBoxLdapActionPerformed

    private void jCheckBoxYahoouiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxYahoouiActionPerformed
        if (jCheckBoxYahooui.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.YUI);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.YUI);
        }
}//GEN-LAST:event_jCheckBoxYahoouiActionPerformed

    private void jCheckBoxAppletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAppletActionPerformed
        if (jCheckBoxApplet.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.APPLET);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.APPLET);
        }
}//GEN-LAST:event_jCheckBoxAppletActionPerformed

    private void jCheckBoxRichUiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxRichUiActionPerformed
        if (jCheckBoxRichUi.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.RICHUI);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.RICHUI);
        }
}//GEN-LAST:event_jCheckBoxRichUiActionPerformed

    private void jCheckBoxFileUploaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFileUploaderActionPerformed
        if (jCheckBoxFileUploader.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.FILEUPLOADER);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.FILEUPLOADER);
        }
}//GEN-LAST:event_jCheckBoxFileUploaderActionPerformed

    private void jCheckBoxCaptchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCaptchaActionPerformed
        if (jCheckBoxCaptcha.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.SIMPLECAPTCHA);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.SIMPLECAPTCHA);
        }
}//GEN-LAST:event_jCheckBoxCaptchaActionPerformed

    private void jCheckBoxFormHelperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFormHelperActionPerformed
        if (jCheckBoxFormHelper.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.FORMHELPER);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.FORMHELPER);
        }
}//GEN-LAST:event_jCheckBoxFormHelperActionPerformed

    private void jCheckBoxFCKeditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFCKeditorActionPerformed
        if (jCheckBoxFCKeditor.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.FCKEDITOR);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.FCKEDITOR);
        }
}//GEN-LAST:event_jCheckBoxFCKeditorActionPerformed

    private void jCheckBoxWebcamSnapsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWebcamSnapsActionPerformed
        if (jCheckBoxWebcamSnaps.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.WEBSNAPS);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.WEBSNAPS);
        }
}//GEN-LAST:event_jCheckBoxWebcamSnapsActionPerformed

    private void jCheckBoxImagezoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxImagezoomActionPerformed
        if (jCheckBoxImagezoom.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.IMAGEZOOM);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.IMAGEZOOM);
        }
}//GEN-LAST:event_jCheckBoxImagezoomActionPerformed

    private void jCheckBoxWsClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWsClientActionPerformed
        if (jCheckBoxWsClient.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.WSCLIENT);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.WSCLIENT);
        }
}//GEN-LAST:event_jCheckBoxWsClientActionPerformed

    private void jCheckBoxRestClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxRestClientActionPerformed
        if (jCheckBoxRestClient.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.RESTCLIENT);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.RESTCLIENT);
        }
}//GEN-LAST:event_jCheckBoxRestClientActionPerformed

    private void jRadioButtonCxfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCxfActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.CXF);
        enleverBriqueTechnique(BriquesTechniquesCommandes.SPRINGWS);
        enleverBriqueTechnique(BriquesTechniquesCommandes.APACHEAXIS2);
}//GEN-LAST:event_jRadioButtonCxfActionPerformed

    private void jRadioButtonSpringWsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSpringWsActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.SPRINGWS);
        enleverBriqueTechnique(BriquesTechniquesCommandes.CXF);
        enleverBriqueTechnique(BriquesTechniquesCommandes.APACHEAXIS2);
}//GEN-LAST:event_jRadioButtonSpringWsActionPerformed

    private void jRadioButtonApacheAxis2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonApacheAxis2ActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.APACHEAXIS2);
        enleverBriqueTechnique(BriquesTechniquesCommandes.CXF);
        enleverBriqueTechnique(BriquesTechniquesCommandes.SPRINGWS);
}//GEN-LAST:event_jRadioButtonApacheAxis2ActionPerformed

    private void jCheckBoxDynamicDomainClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDynamicDomainClassActionPerformed
        if (jCheckBoxDynamicDomainClass.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.DYNAMICDOMAINCLASS);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.DYNAMICDOMAINCLASS);
        }
}//GEN-LAST:event_jCheckBoxDynamicDomainClassActionPerformed

    private void jCheckBoxDbUtilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDbUtilActionPerformed
        if (jCheckBoxDbUtil.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.DBUTIL);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.DBUTIL);
        }
}//GEN-LAST:event_jCheckBoxDbUtilActionPerformed

    private void jRadioButtonGoogleChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonGoogleChartActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.GOOGLECHART);
        enleverBriqueTechnique(BriquesTechniquesCommandes.JFREECHART);
        enleverBriqueTechnique(BriquesTechniquesCommandes.OPENFLASHCHART);
}//GEN-LAST:event_jRadioButtonGoogleChartActionPerformed

    private void jRadioButtonOpenFlashChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOpenFlashChartActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.OPENFLASHCHART);
        enleverBriqueTechnique(BriquesTechniquesCommandes.GOOGLECHART);
        enleverBriqueTechnique(BriquesTechniquesCommandes.JFREECHART);
}//GEN-LAST:event_jRadioButtonOpenFlashChartActionPerformed

    private void jRadioButtonJfreeChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonJfreeChartActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.JFREECHART);
        enleverBriqueTechnique(BriquesTechniquesCommandes.GOOGLECHART);
        enleverBriqueTechnique(BriquesTechniquesCommandes.OPENFLASHCHART);
}//GEN-LAST:event_jRadioButtonJfreeChartActionPerformed

    private void jRadioButtonWebtestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonWebtestActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.WEBTEST);
        enleverBriqueTechnique(BriquesTechniquesCommandes.FUNCTIONALTESTING);
}//GEN-LAST:event_jRadioButtonWebtestActionPerformed

    private void jRadioButtonFunctionalTestingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFunctionalTestingActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.FUNCTIONALTESTING);
        enleverBriqueTechnique(BriquesTechniquesCommandes.WEBTEST);
}//GEN-LAST:event_jRadioButtonFunctionalTestingActionPerformed

    private void jCheckBoxSeleniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSeleniumActionPerformed
        if (jCheckBoxSelenium.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.SELENIUM);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.SELENIUM);
        }
}//GEN-LAST:event_jCheckBoxSeleniumActionPerformed

    private void jCheckBoxFitnesseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFitnesseActionPerformed
        if (jCheckBoxFitnesse.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.FITENESSE);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.FITENESSE);
        }
}//GEN-LAST:event_jCheckBoxFitnesseActionPerformed

    private void jCheckBoxDbUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDbUnitActionPerformed
        if (jCheckBoxDbUnit.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.DBUNIT);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.DBUNIT);
        }
}//GEN-LAST:event_jCheckBoxDbUnitActionPerformed

    private void jCheckBoxExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxExportActionPerformed
        if (jCheckBoxExport.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.EXPORT);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.EXPORT);
        }
}//GEN-LAST:event_jCheckBoxExportActionPerformed

    private void jRadioButtonJasperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonJasperActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.JASPER);
        enleverBriqueTechnique(BriquesTechniquesCommandes.DYNAMICJASPERREPORT);
}//GEN-LAST:event_jRadioButtonJasperActionPerformed

    private void jRadioButtonDynamicJasperReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDynamicJasperReportActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.DYNAMICJASPERREPORT);
        enleverBriqueTechnique(BriquesTechniquesCommandes.JASPER);
}//GEN-LAST:event_jRadioButtonDynamicJasperReportActionPerformed

    private void jRadioButtonActivitiBpmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonActivitiBpmActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.ACTIVITIBPM);
        enleverBriqueTechnique(BriquesTechniquesCommandes.AJAXFLOW);
        enleverBriqueTechnique(BriquesTechniquesCommandes.GRAILSFLOW);
        enleverBriqueTechnique(BriquesTechniquesCommandes.OSWORKFLOW);
}//GEN-LAST:event_jRadioButtonActivitiBpmActionPerformed

    private void jRadioButtonAjaxfloxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAjaxfloxActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.AJAXFLOW);
        enleverBriqueTechnique(BriquesTechniquesCommandes.ACTIVITIBPM);
        enleverBriqueTechnique(BriquesTechniquesCommandes.GRAILSFLOW);
        enleverBriqueTechnique(BriquesTechniquesCommandes.OSWORKFLOW);
}//GEN-LAST:event_jRadioButtonAjaxfloxActionPerformed

    private void jRadioButtonGrailsFlowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonGrailsFlowActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.GRAILSFLOW);
        enleverBriqueTechnique(BriquesTechniquesCommandes.AJAXFLOW);
        enleverBriqueTechnique(BriquesTechniquesCommandes.ACTIVITIBPM);
        enleverBriqueTechnique(BriquesTechniquesCommandes.OSWORKFLOW);
}//GEN-LAST:event_jRadioButtonGrailsFlowActionPerformed

    private void jRadioButtonOsWorkflowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOsWorkflowActionPerformed
        ajouterBriqueTechnique(BriquesTechniquesCommandes.OSWORKFLOW);
        enleverBriqueTechnique(BriquesTechniquesCommandes.ACTIVITIBPM);
        enleverBriqueTechnique(BriquesTechniquesCommandes.OSWORKFLOW);
        enleverBriqueTechnique(BriquesTechniquesCommandes.AJAXFLOW);
}//GEN-LAST:event_jRadioButtonOsWorkflowActionPerformed

    private void jCheckBoxAuditTrailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAuditTrailActionPerformed
        if (jCheckBoxAuditTrail.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.AUDITTRAIL);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.AUDITTRAIL);
        }
}//GEN-LAST:event_jCheckBoxAuditTrailActionPerformed

    private void jCheckBoxAuditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAuditActionPerformed
        if (jCheckBoxAudit.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.AUDITLOGGIN);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.AUDITLOGGIN);
        }
}//GEN-LAST:event_jCheckBoxAuditActionPerformed

    private void jCheckBoxClassDiagramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxClassDiagramActionPerformed
        if (jCheckBoxClassDiagram.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.CLASSDIAGRAM);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.CLASSDIAGRAM);
        }
}//GEN-LAST:event_jCheckBoxClassDiagramActionPerformed

    private void jCheckBoxCreateDomainUmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCreateDomainUmlActionPerformed
        if (jCheckBoxCreateDomainUml.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.CREATEDOMAINUML);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.CREATEDOMAINUML);
        }
}//GEN-LAST:event_jCheckBoxCreateDomainUmlActionPerformed

    private void jCheckBoxLicenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLicenceActionPerformed
        if (jCheckBoxLicence.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.LICENSE);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.LICENSE);
        }
}//GEN-LAST:event_jCheckBoxLicenceActionPerformed

    private void jCheckBoxQuartzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxQuartzActionPerformed
        if (jCheckBoxQuartz.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.QUARTZ);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.QUARTZ);
        }
}//GEN-LAST:event_jCheckBoxQuartzActionPerformed

    private void jCheckBoxReverseEngineeringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxReverseEngineeringActionPerformed
        if (jCheckBoxReverseEngineering.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.REVERSEENGENIEERING);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.REVERSEENGENIEERING);
        }
}//GEN-LAST:event_jCheckBoxReverseEngineeringActionPerformed

    private void jCheckBoxApplicationInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxApplicationInfoActionPerformed
        if (jCheckBoxApplicationInfo.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.APPLICATIONINFO);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.APPLICATIONINFO);
        }
}//GEN-LAST:event_jCheckBoxApplicationInfoActionPerformed

    private void jCheckBoxClamAvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxClamAvActionPerformed
        if (jCheckBoxClamAv.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.CLAMAV);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.CLAMAV);
        }
}//GEN-LAST:event_jCheckBoxClamAvActionPerformed

    private void jCheckBoxOsgiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxOsgiActionPerformed
        if (jCheckBoxOsgi.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.OSGI);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.OSGI);
        }
}//GEN-LAST:event_jCheckBoxOsgiActionPerformed

    private void jCheckBoxMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMailActionPerformed
        if (jCheckBoxMail.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.MAIL);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.MAIL);
        }
}//GEN-LAST:event_jCheckBoxMailActionPerformed

    private void jCheckBoxCsvParserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCsvParserActionPerformed
        if (jCheckBoxCsvParser.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.CSVPARSER);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.CSVPARSER);
        }
}//GEN-LAST:event_jCheckBoxCsvParserActionPerformed

    private void jCheckBoxExcelImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxExcelImportActionPerformed
        if (jCheckBoxExcelImport.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.EXCELIMPORT);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.EXCELIMPORT);
        }
}//GEN-LAST:event_jCheckBoxExcelImportActionPerformed

    private void jCheckBoxI18nTemplatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxI18nTemplatesActionPerformed
        if (jCheckBoxI18nTemplates.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.I18);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.I18);
        }
}//GEN-LAST:event_jCheckBoxI18nTemplatesActionPerformed

    private void jCheckBoxSearchableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSearchableActionPerformed
        if (jCheckBoxSearchable.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.SEARCHABLE);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.SEARCHABLE);
        }
}//GEN-LAST:event_jCheckBoxSearchableActionPerformed

    private void jCheckBoxWebSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWebSearchActionPerformed
        if (jCheckBoxWebSearch.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.WEBSEARCH);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.WEBSEARCH);
        }
}//GEN-LAST:event_jCheckBoxWebSearchActionPerformed

    private void jCheckBoxJmsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxJmsActionPerformed
        if (jCheckBoxJms.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.JMS);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.JMS);
        }
}//GEN-LAST:event_jCheckBoxJmsActionPerformed

    private void jCheckBoxActiveMQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxActiveMQActionPerformed
        if (jCheckBoxActiveMQ.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.ACTIVEMQ);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.ACTIVEMQ);
        }
}//GEN-LAST:event_jCheckBoxActiveMQActionPerformed

    private void jCheckBoxJmxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxJmxActionPerformed
        if (jCheckBoxJmx.isSelected()) {
            ajouterBriqueTechnique(BriquesTechniquesCommandes.JMX);
        } else {
            enleverBriqueTechnique(BriquesTechniquesCommandes.JMX);
        }
}//GEN-LAST:event_jCheckBoxJmxActionPerformed

    private void ajouterBriqueTechnique(BriquesTechniquesCommandes btc) {
        controlleur.getViewToCoreDTO().getBriquesTechniques().add(btc);
    }

    private void enleverBriqueTechnique(BriquesTechniquesCommandes btc) {
        controlleur.getViewToCoreDTO().getBriquesTechniques().remove(btc);
    }

    private void cancelSpecificGspTunning() {
        jTabbedPane1.setEnabledAt(3, false);
        jTabbedPane1.setEnabledAt(6, false);
        enleverBriqueTechnique(BriquesTechniquesCommandes.YUI);
        enleverBriqueTechnique(BriquesTechniquesCommandes.APPLET);
        enleverBriqueTechnique(BriquesTechniquesCommandes.RICHUI);
        enleverBriqueTechnique(BriquesTechniquesCommandes.FILEUPLOADER);
        enleverBriqueTechnique(BriquesTechniquesCommandes.SIMPLECAPTCHA);
        enleverBriqueTechnique(BriquesTechniquesCommandes.FORMHELPER);
        enleverBriqueTechnique(BriquesTechniquesCommandes.FCKEDITOR);
        enleverBriqueTechnique(BriquesTechniquesCommandes.WEBSNAPS);
        enleverBriqueTechnique(BriquesTechniquesCommandes.IMAGEZOOM);
        enleverBriqueTechnique(BriquesTechniquesCommandes.JFREECHART);
        enleverBriqueTechnique(BriquesTechniquesCommandes.GOOGLECHART);
        enleverBriqueTechnique(BriquesTechniquesCommandes.OPENFLASHCHART);
        jCheckBoxYahooui.setSelected(false);
        jCheckBoxApplet.setSelected(false);
        jCheckBoxRichUi.setSelected(false);
        jCheckBoxFileUploader.setSelected(false);
        jCheckBoxCaptcha.setSelected(false);
        jCheckBoxFormHelper.setSelected(false);
        jCheckBoxFCKeditor.setSelected(false);
        jCheckBoxWebcamSnaps.setSelected(false);
        jCheckBoxImagezoom.setSelected(false);
        jRadioButtonJfreeChart.setSelected(false);
        jRadioButtonGoogleChart.setSelected(false);
        jRadioButtonOpenFlashChart.setSelected(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupDiagrammeChooser;
    private javax.swing.ButtonGroup buttonGroupFunctionalTestChooser;
    private javax.swing.ButtonGroup buttonGroupJasperChooser;
    private javax.swing.ButtonGroup buttonGroupSecurityTechnologie;
    private javax.swing.ButtonGroup buttonGroupViewsChoice;
    private javax.swing.ButtonGroup buttonGroupWorkflowChooser;
    private javax.swing.ButtonGroup buttonGroupWsChoice;
    private javax.swing.JCheckBox jCheckBoxActiveMQ;
    private javax.swing.JCheckBox jCheckBoxApplet;
    private javax.swing.JCheckBox jCheckBoxApplicationInfo;
    private javax.swing.JCheckBox jCheckBoxAudit;
    private javax.swing.JCheckBox jCheckBoxAuditTrail;
    private javax.swing.JCheckBox jCheckBoxCaptcha;
    private javax.swing.JCheckBox jCheckBoxClamAv;
    private javax.swing.JCheckBox jCheckBoxClassDiagram;
    private javax.swing.JCheckBox jCheckBoxCreateDomainUml;
    private javax.swing.JCheckBox jCheckBoxCsvParser;
    private javax.swing.JCheckBox jCheckBoxDbUnit;
    private javax.swing.JCheckBox jCheckBoxDbUtil;
    private javax.swing.JCheckBox jCheckBoxDynamicDomainClass;
    private javax.swing.JCheckBox jCheckBoxEncryption;
    private javax.swing.JCheckBox jCheckBoxExcelImport;
    private javax.swing.JCheckBox jCheckBoxExport;
    private javax.swing.JCheckBox jCheckBoxFCKeditor;
    private javax.swing.JCheckBox jCheckBoxFileUploader;
    private javax.swing.JCheckBox jCheckBoxFitnesse;
    private javax.swing.JCheckBox jCheckBoxFormHelper;
    private javax.swing.JCheckBox jCheckBoxI18nTemplates;
    private javax.swing.JCheckBox jCheckBoxImagezoom;
    private javax.swing.JCheckBox jCheckBoxJms;
    private javax.swing.JCheckBox jCheckBoxJmx;
    private javax.swing.JCheckBox jCheckBoxLdap;
    private javax.swing.JCheckBox jCheckBoxLicence;
    private javax.swing.JCheckBox jCheckBoxMail;
    private javax.swing.JCheckBox jCheckBoxOsgi;
    private javax.swing.JCheckBox jCheckBoxQuartz;
    private javax.swing.JCheckBox jCheckBoxRestClient;
    private javax.swing.JCheckBox jCheckBoxReverseEngineering;
    private javax.swing.JCheckBox jCheckBoxRichUi;
    private javax.swing.JCheckBox jCheckBoxSearchable;
    private javax.swing.JCheckBox jCheckBoxSelenium;
    private javax.swing.JCheckBox jCheckBoxWebSearch;
    private javax.swing.JCheckBox jCheckBoxWebcamSnaps;
    private javax.swing.JCheckBox jCheckBoxWsClient;
    private javax.swing.JCheckBox jCheckBoxYahooui;
    private javax.swing.JPanel jPanelArchitectureDistribue;
    private javax.swing.JPanel jPanelAudit;
    private javax.swing.JPanel jPanelCharting;
    private javax.swing.JPanel jPanelRecherche;
    private javax.swing.JPanel jPanelReporting;
    private javax.swing.JPanel jPanelRichClient;
    private javax.swing.JPanel jPanelSecurity;
    private javax.swing.JPanel jPanelTestingUtilites;
    private javax.swing.JPanel jPanelUml;
    private javax.swing.JPanel jPanelUtilitaires;
    private javax.swing.JPanel jPanelUtilitairesBdD;
    private javax.swing.JPanel jPanelView;
    private javax.swing.JPanel jPanelWorkflow;
    private javax.swing.JPanel jPanelWs;
    private javax.swing.JRadioButton jRadioButtonAcegi;
    private javax.swing.JRadioButton jRadioButtonActivitiBpm;
    private javax.swing.JRadioButton jRadioButtonAjaxflox;
    private javax.swing.JRadioButton jRadioButtonApacheAxis2;
    private javax.swing.JRadioButton jRadioButtonCxf;
    private javax.swing.JRadioButton jRadioButtonDynamicJasperReport;
    private javax.swing.JRadioButton jRadioButtonFLEX;
    private javax.swing.JRadioButton jRadioButtonFunctionalTesting;
    private javax.swing.JRadioButton jRadioButtonGSP;
    private javax.swing.JRadioButton jRadioButtonGoogleChart;
    private javax.swing.JRadioButton jRadioButtonGrailsFlow;
    private javax.swing.JRadioButton jRadioButtonJasper;
    private javax.swing.JRadioButton jRadioButtonJfreeChart;
    private javax.swing.JRadioButton jRadioButtonJsecurity;
    private javax.swing.JRadioButton jRadioButtonOpenFlashChart;
    private javax.swing.JRadioButton jRadioButtonOpenLaszlo;
    private javax.swing.JRadioButton jRadioButtonOsWorkflow;
    private javax.swing.JRadioButton jRadioButtonSpringSecurityCore;
    private javax.swing.JRadioButton jRadioButtonSpringWs;
    private javax.swing.JRadioButton jRadioButtonWebtest;
    private javax.swing.JRadioButton jRadioButtonZK;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
