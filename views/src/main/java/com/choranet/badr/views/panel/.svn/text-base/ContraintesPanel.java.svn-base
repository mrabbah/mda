/*
 ================= IMPORTANT - READ CAREFULLY BEFORE USING =====================
 THE SOFTWARE PRODUCT. The SOFTWARE PRODUCT is owned by CHORA INFORMATIQUE and
 is copyrighted and licensed, not sold. The SOFTWARE PRODUCT is protected by
 copyright law and international copyright treaties, as well as other
 intellectual property laws and treaties. By installing, copying or otherwise
 using this SOFTWARE PRODUCT, you agree to be bound by the terms of CHORA
 INFORMATIQUE's General Terms and Conditions in relation to the type of license
 you have acquired. (See your Contract Administrator for complete details of
 your license agreement with CHORA INFORMATIQUE).
 If you do not agree to the terms of CHORA INFORMATIQUE's License Agreement,
 do not install or use the SOFTWARE PRODUCT. The term "SOFTWARE PRODUCT" means
 the original program and all whole or partial copies of it. A Program consists
 of machine-readable instructions, its associated media, printed materials, and
 "online" or electronic documentation and related licensed materials
 ("SOFTWARE PRODUCT").
 COPYRIGHT. All title and copyrights in and to this SOFTWARE PRODUCT (including
 but not limited to any images, photographs, video, audio, text and "applets"
 incorporated into the SOFTWARE PRODUCT), the accompanying printed materials,
 and any copies of the SOFTWARE PRODUCT are owned by CHORA INFORMATIQUE or its
 suppliers. The SOFTWARE PRODUCT is protected by copyright law and international
 treaty provisions. Therefore, you must treat the SOFTWARE PRODUCT like any
 other copyrighted material except that you may install the SOFTWARE PRODUCT
 on a single computer provided you keep the original solely for backup or
 archival purposes. Should you have any questions, please contact your local
 CHORA INFORMATIQUE Office or Distributor.
 */

/*
 * ContraintesPanel.java
 *
 * Created on 23 mars 2011, 17:12:33
 */

package com.choranet.badr.views.panel;

import com.choranet.badr.core.Controlleur;
import com.choranet.badr.core.model.Attribut;
import com.choranet.badr.core.model.Clazz;
import com.choranet.badr.core.model.TypeAttributEnum;
import java.awt.Component;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author rabbah
 */
public class ContraintesPanel extends javax.swing.JPanel {
    private Controlleur controlleur;
    private Component parent;
    private DefaultListModel listeClasses;
    private DefaultListModel listeAttribut;

    /** Creates new form ContraintesPanel */
    public ContraintesPanel(Controlleur controlleur, Component parent) {
        this.controlleur = controlleur;
        this.parent = parent;

        this.controlleur = controlleur;
        listeClasses = new DefaultListModel();
        List<Clazz> classes = this.controlleur.getCoreToViewDTO().getClazzs();
        for (Iterator<Clazz> it = classes.iterator(); it.hasNext();) {
            Clazz clazz = it.next();
            listeClasses.addElement(clazz);
        }
        listeAttribut = new DefaultListModel();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelDomainClass = new javax.swing.JPanel();
        jPanelClass = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListClass = new javax.swing.JList();
        jPanelAttribue = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListAttribut = new javax.swing.JList();
        jPanelContrainte = new javax.swing.JPanel();

        setName("Form"); // NOI18N

        jPanelDomainClass.setName("jPanelDomainClass"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.choranet.badr.views.Run.class).getContext().getResourceMap(ContraintesPanel.class);
        jPanelClass.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelClass.border.title"))); // NOI18N
        jPanelClass.setName("jPanelClass"); // NOI18N
        jPanelClass.setPreferredSize(new java.awt.Dimension(280, 420));

        jScrollPane1.setName("jScrollPane1"); // NOI18N
        jScrollPane1.setPreferredSize(new java.awt.Dimension(260, 380));

        jListClass.setModel(listeClasses);
        jListClass.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListClass.setName("jListClass"); // NOI18N
        jListClass.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListClassValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListClass);

        jPanelClass.add(jScrollPane1);

        jPanelDomainClass.add(jPanelClass);

        jPanelAttribue.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelAttribue.border.title"))); // NOI18N
        jPanelAttribue.setName("jPanelAttribue"); // NOI18N
        jPanelAttribue.setPreferredSize(new java.awt.Dimension(280, 420));

        jScrollPane2.setName("jScrollPane2"); // NOI18N
        jScrollPane2.setPreferredSize(new java.awt.Dimension(260, 380));

        jListAttribut.setModel(listeAttribut);
        jListAttribut.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListAttribut.setName("jListAttribut"); // NOI18N
        jListAttribut.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListAttributValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListAttribut);

        jPanelAttribue.add(jScrollPane2);

        jPanelDomainClass.add(jPanelAttribue);

        jPanelContrainte.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelContrainte.border.title"))); // NOI18N
        jPanelContrainte.setName("jPanelContrainte"); // NOI18N
        jPanelContrainte.setPreferredSize(new java.awt.Dimension(450, 420));
        jPanelDomainClass.add(jPanelContrainte);

        add(jPanelDomainClass);
    }// </editor-fold>//GEN-END:initComponents

    private void jListClassValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListClassValueChanged
        if (evt.getValueIsAdjusting() == false) {
            Clazz clazz = (Clazz) jListClass.getSelectedValue();
            listeAttribut.removeAllElements();
            List<Attribut> attributs = clazz.getAttributs();
            for (Iterator<Attribut> it = attributs.iterator(); it.hasNext();) {
                Attribut attribut = it.next();
                listeAttribut.addElement(attribut);
            }
            jPanelContrainte.removeAll();
            parent.repaint();
        }
}//GEN-LAST:event_jListClassValueChanged

    private void jListAttributValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListAttributValueChanged
        if (evt.getValueIsAdjusting() == false) {
            Attribut attribut = (Attribut) jListAttribut.getSelectedValue();
            if (attribut != null) {
                TypeAttributEnum typeAttribut = Attribut.getCategorieTypeAttribut(attribut);
                jPanelContrainte.removeAll();
                Component chooser = null;
                switch (typeAttribut) {
                    case STRING: {
                        chooser =
                                new StringContraintesPanelChooser(attribut, this);
                        break;
                    }
                    case ENTIER: {
                        chooser =
                                new IntegerContraintesPanelChooser(attribut, this);
                        break;
                    }
                    case REEL: {
                        chooser =
                                new RealContraintesPanelChooser(attribut, this);
                        break;
                    }
                    case OBJET: {
                        chooser =
                                new ObjectContraintesPanelChooser(attribut, this);
                        break;
                    }
                }
                jPanelContrainte.add(chooser);
                parent.validate();
            }
        }
}//GEN-LAST:event_jListAttributValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jListAttribut;
    private javax.swing.JList jListClass;
    private javax.swing.JPanel jPanelAttribue;
    private javax.swing.JPanel jPanelClass;
    private javax.swing.JPanel jPanelContrainte;
    private javax.swing.JPanel jPanelDomainClass;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
